{"ast":null,"code":"import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\nimport ManageExpense from \"./screens/ManageExpense\";\nimport RecentExpenses from \"./screens/RecentExpenses\";\nimport AllExpenses from \"./screens/AllExpenses\";\nimport { GlobalStyles } from \"./constants/styles\";\nimport IconButton from \"./components/UI/IconButton\";\nimport ExpensesContextProvider from \"./store/expenses-context\";\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar BottomTabs = createBottomTabNavigator();\nfunction ExpensesOverview() {\n  return _jsxs(BottomTabs.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var navigation = _ref.navigation;\n      return {\n        headerStyle: {\n          backgroundColor: GlobalStyles.colors.primary500\n        },\n        headerTintColor: 'white',\n        tabBarStyle: {\n          backgroundColor: GlobalStyles.colors.primary500\n        },\n        tabBarActiveTintColor: GlobalStyles.colors.accent500,\n        headerRight: function headerRight(_ref2) {\n          var tintColor = _ref2.tintColor;\n          return _jsx(IconButton, {\n            icon: \"add\",\n            size: 24,\n            color: tintColor,\n            onPress: function onPress() {\n              navigation.navigate('ManageExpense');\n            }\n          });\n        }\n      };\n    },\n    children: [_jsx(BottomTabs.Screen, {\n      name: \"RecentExpenses\",\n      component: RecentExpenses,\n      options: {\n        title: 'Recent Expenses',\n        tabBarLabel: 'Recent',\n        tabBarIcon: function tabBarIcon(_ref3) {\n          var color = _ref3.color,\n            size = _ref3.size;\n          return _jsx(Ionicons, {\n            name: \"hourglass\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    }), _jsx(BottomTabs.Screen, {\n      name: \"AllExpenses\",\n      component: AllExpenses,\n      options: {\n        title: 'All Expenses',\n        tabBarLabel: 'All Expenses',\n        tabBarIcon: function tabBarIcon(_ref4) {\n          var color = _ref4.color,\n            size = _ref4.size;\n          return _jsx(Ionicons, {\n            name: \"calendar\",\n            size: size,\n            color: color\n          });\n        }\n      }\n    })]\n  });\n}\nexport default function App() {\n  return _jsxs(_Fragment, {\n    children: [_jsx(StatusBar, {\n      style: \"light\"\n    }), _jsx(ExpensesContextProvider, {\n      children: _jsx(NavigationContainer, {\n        children: _jsxs(Stack.Navigator, {\n          screenOptions: {\n            headerStyle: {\n              backgroundColor: GlobalStyles.colors.primary500\n            },\n            headerTintColor: 'white'\n          },\n          children: [_jsx(Stack.Screen, {\n            name: \"ExpensesOverview\",\n            component: ExpensesOverview,\n            options: {\n              headerShown: false\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"ManageExpense\",\n            component: ManageExpense,\n            options: {\n              presentation: 'modal'\n            }\n          })]\n        })\n      })\n    })]\n  });\n}","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","Ionicons","ManageExpense","RecentExpenses","AllExpenses","GlobalStyles","IconButton","ExpensesContextProvider","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Stack","BottomTabs","ExpensesOverview","Navigator","screenOptions","_ref","navigation","headerStyle","backgroundColor","colors","primary500","headerTintColor","tabBarStyle","tabBarActiveTintColor","accent500","headerRight","_ref2","tintColor","icon","size","color","onPress","navigate","children","Screen","name","component","options","title","tabBarLabel","tabBarIcon","_ref3","_ref4","App","style","headerShown","presentation"],"sources":["/Users/dimaswahyuutomo/Documents/personal/Course/ReactNative/react-native-practical-guide-code/code/01-starting-code/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { Ionicons } from '@expo/vector-icons';\n\nimport ManageExpense from './screens/ManageExpense';\nimport RecentExpenses from './screens/RecentExpenses';\nimport AllExpenses from './screens/AllExpenses';\nimport { GlobalStyles } from './constants/styles';\nimport IconButton from './components/UI/IconButton';\nimport ExpensesContextProvider from './store/expenses-context';\n\nconst Stack = createNativeStackNavigator();\nconst BottomTabs = createBottomTabNavigator();\n\nfunction ExpensesOverview() {\n  return (\n    <BottomTabs.Navigator\n      screenOptions={({ navigation }) => ({\n        headerStyle: { backgroundColor: GlobalStyles.colors.primary500 },\n        headerTintColor: 'white',\n        tabBarStyle: { backgroundColor: GlobalStyles.colors.primary500 },\n        tabBarActiveTintColor: GlobalStyles.colors.accent500,\n        headerRight: ({ tintColor }) => (\n          <IconButton\n            icon=\"add\"\n            size={24}\n            color={tintColor}\n            onPress={() => {\n              navigation.navigate('ManageExpense');\n            }}\n          />\n        ),\n      })}\n    >\n      <BottomTabs.Screen\n        name=\"RecentExpenses\"\n        component={RecentExpenses}\n        options={{\n          title: 'Recent Expenses',\n          tabBarLabel: 'Recent',\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"hourglass\" size={size} color={color} />\n          ),\n        }}\n      />\n      <BottomTabs.Screen\n        name=\"AllExpenses\"\n        component={AllExpenses}\n        options={{\n          title: 'All Expenses',\n          tabBarLabel: 'All Expenses',\n          tabBarIcon: ({ color, size }) => (\n            <Ionicons name=\"calendar\" size={size} color={color} />\n          ),\n        }}\n      />\n    </BottomTabs.Navigator>\n  );\n}\n\nexport default function App() {\n  return (\n    <>\n      <StatusBar style=\"light\" />\n      <ExpensesContextProvider>\n        <NavigationContainer>\n          <Stack.Navigator\n            screenOptions={{\n              headerStyle: { backgroundColor: GlobalStyles.colors.primary500 },\n              headerTintColor: 'white',\n            }}\n          >\n            <Stack.Screen\n              name=\"ExpensesOverview\"\n              component={ExpensesOverview}\n              options={{ headerShown: false }}\n            />\n            <Stack.Screen\n              name=\"ManageExpense\"\n              component={ManageExpense}\n              options={{\n                presentation: 'modal',\n              }}\n            />\n          </Stack.Navigator>\n        </NavigationContainer>\n      </ExpensesContextProvider>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}