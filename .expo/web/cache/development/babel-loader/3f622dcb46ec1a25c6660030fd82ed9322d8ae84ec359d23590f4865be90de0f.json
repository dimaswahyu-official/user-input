{"ast":null,"code":"import Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigation } from '@react-navigation/native';\nimport { GlobalStyles } from \"../../constants/styles\";\nimport { getFormattedDate } from \"../../util/date\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction ExpenseItem(_ref) {\n  var id = _ref.id,\n    description = _ref.description,\n    amount = _ref.amount,\n    date = _ref.date;\n  var navigation = useNavigation();\n  function expensePressHandler() {\n    navigation.navigate('ManageExpense', {\n      expenseId: id\n    });\n  }\n  return _jsx(Pressable, {\n    onPress: expensePressHandler,\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return pressed && styles.pressed;\n    },\n    children: _jsxs(View, {\n      style: styles.expenseItem,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.textBase, styles.description],\n          children: description\n        }), _jsx(Text, {\n          style: styles.textBase,\n          children: getFormattedDate(date)\n        })]\n      }), _jsx(View, {\n        style: styles.amountContainer,\n        children: _jsx(Text, {\n          style: styles.amount,\n          children: amount.toFixed(2)\n        })\n      })]\n    })\n  });\n}\nexport default ExpenseItem;\nvar styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75\n  },\n  expenseItem: {\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowRadius: 4,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.4\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 4,\n    fontWeight: 'bold'\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    minWidth: 80\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["useNavigation","GlobalStyles","getFormattedDate","jsx","_jsx","jsxs","_jsxs","ExpenseItem","_ref","id","description","amount","date","navigation","expensePressHandler","navigate","expenseId","Pressable","onPress","style","_ref2","pressed","styles","children","View","expenseItem","Text","textBase","amountContainer","toFixed","StyleSheet","create","opacity","padding","marginVertical","backgroundColor","colors","primary500","flexDirection","justifyContent","borderRadius","elevation","shadowColor","gray500","shadowRadius","shadowOffset","width","height","shadowOpacity","color","primary50","fontSize","marginBottom","fontWeight","paddingHorizontal","paddingVertical","alignItems","minWidth"],"sources":["/Users/dimaswahyuutomo/Documents/personal/Course/ReactNative/user-input/components/ExpensesOutput/ExpenseItem.js"],"sourcesContent":["import { Pressable, StyleSheet, Text, View } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { GlobalStyles } from '../../constants/styles';\nimport { getFormattedDate } from '../../util/date';\n\nfunction ExpenseItem({ id, description, amount, date }) {\n  const navigation = useNavigation();\n\n  function expensePressHandler() {\n    navigation.navigate('ManageExpense', {\n      expenseId: id\n    });\n  }\n\n  return (\n    <Pressable\n      onPress={expensePressHandler}\n      style={({ pressed }) => pressed && styles.pressed}\n    >\n      <View style={styles.expenseItem}>\n        <View>\n          <Text style={[styles.textBase, styles.description]}>\n            {description}\n          </Text>\n          <Text style={styles.textBase}>{getFormattedDate(date)}</Text>\n        </View>\n        <View style={styles.amountContainer}>\n          <Text style={styles.amount}>{amount.toFixed(2)}</Text>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default ExpenseItem;\n\nconst styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75,\n  },\n  expenseItem: {\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    borderRadius: 6,\n    elevation: 3,\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowRadius: 4,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.4,\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50,\n  },\n  description: {\n    fontSize: 16,\n    marginBottom: 4,\n    fontWeight: 'bold',\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 4,\n    minWidth: 80,\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}